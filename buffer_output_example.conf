# Logstash may come with an old version of the RabbitMQ plugin installed
# If so, this configuration file will fail to run. To find out run this:
# sudo /usr/share/logstash/bin/logstash-plugin list | grep rabbitmq
#
# If the integration plugin is lower than version 7.0.2 you will need to
# upgrade it. To do so, run this command:
# sudo /usr/share/logstash/bin/logstash-plugin install --version 7.0.2 logstash-integration-rabbitmq
#
# To run rabbitmq for testing first enter this command:
# echo '[rabbitmq_management,rabbitmq_sharding,rabbitmq_consistent_hash_exchange].' > /tmp/rabbitmq-plugins
# Then run the docker command below
# docker run -it --rm --name rabbitmq -e RABBITMQ_ERLANG_COOKIE=RandomStringGoesHere -e RABBITMQ_NODENAME=rabbit@localhost -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=password -e RABBITMQ_HIPE_COMPILE=1 -p 5671:5671 -p 5672:5672 -p 15672:15672 -v /tmp/buffer:/var/lib/rabbitmq/mnesia -v /tmp/rabbitmq-plugins:/etc/rabbitmq/enabled_plugins rabbitmq:3-management
#
input {
  stdin {
    
  }
}
filter {
  kv {
    source => "message"
  }
}
output {
  if [log_event_type] == "windows" {
    rabbitmq {
      automatic_recovery => true
      exchange => "windows"
      exchange_type => "direct"
      host => "localhost" # change to rabbitmq if logstash is a container
      key => "windows"
      user => "admin"
      password => "password"
      port => "5672"
      durable => true
      persistent => true
    }
  }
  if [log_event_type] == "linux" {
    rabbitmq {
      automatic_recovery => true
      exchange => "linux"
      exchange_type => "direct"
      host => "localhost" # change to rabbitmq if logstash is a container
      key => "linux"
      user => "admin"
      password => "password"
      port => "5672"
      durable => true
      persistent => true
    }
  }
}

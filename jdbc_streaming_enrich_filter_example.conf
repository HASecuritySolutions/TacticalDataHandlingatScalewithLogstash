# Command to run Microsoft SQL on Linux - ASSUMES DOCKER IS INSTALLED
# docker run -it -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=$3curePassword' -p 1433:1433 --rm mcr.microsoft.com/mssql/server
#
# Micrsofot SQL Management Studio download link - https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15
#
# JAR driver download link - https://docs.microsoft.com/en-us/sql/connect/jdbc/download-microsoft-jdbc-driver-for-sql-server
# Make sure downloaded jar matches JDK version Logstash is using.
# Also, copy jar file into /usr/share/logstash/logstash-core/lib/jars
#
# This will only work if you have a database and table set up with a field called username that has a user in it matching the generator message
input {
  generator {
    message => "jhenderson"
    count => 1
  }
}
filter {
  jdbc_streaming {
    jdbc_connection_string => "jdbc:sqlserver://localhost;databaseName=test"    
    jdbc_user => "sa" # do not use sa in production
    jdbc_password => "$3curePassword"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    statement => "SELECT * from user_info WHERE username = :username"
    # In production, message should be replaced with the true field name
    parameters => { "username" => "message"} # message is the field username is being looked up against
    target => "user_info"
  }
}
output {
  stdout {
    codec => rubydebug
  }
}

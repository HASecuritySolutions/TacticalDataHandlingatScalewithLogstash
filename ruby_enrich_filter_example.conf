# To generate a base64 encoded string pass it through echo like below
# echo 'Example obfuscated evil string' | base64
input {
  stdin {
    
  }
}
filter {
  grok {
    match => { "message" => "(?<possible_base64_code>[A-Za-z0-9+/]{30,}[=]{0,2})" }
    tag_on_failure => []
  }
  ruby {
    code => "event.set('message_length', event.get('message').length)"
  }
  if [possible_base64_code] {
    mutate {
      add_tag => [ "possible_base64_encoding" ]
    }
    ruby {
      init => "require 'base64'"
      code => "a = Base64.decode64(event.get('possible_base64_code'));
                event.set('base64_decoded', a);"
    }
  }
}
output {
  stdout {
    
  }
}
